/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.finalproject;
import com.mycompany.finalproject.classes.CustomListModelMatches;
import com.mycompany.finalproject.classes.CustomListModelSport;
import com.mycompany.finalproject.classes.CustomListModelTournament;
import com.mycompany.finalproject.classes.Match;
import com.mycompany.finalproject.classes.Sport;
import com.mycompany.finalproject.classes.TeamBase;
import com.mycompany.finalproject.classes.Tournament;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author conradkadel
 */
public class MainWindow extends javax.swing.JFrame {
  
    
    // Loading all 3 different CustomListModels for 3 Jlist to Controll each of them 
    // individually. Those are Sports, Tournmanest and Matches
    
    private CustomListModelSport listSport = new CustomListModelSport();
    private CustomListModelTournament listTournaments = new CustomListModelTournament();
    private CustomListModelMatches listMatches = new CustomListModelMatches();
   


    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        // THis will initially Set Up the Window and load all the neccesary fields
        // WIll later load all this Information from an API
        
        ArrayList<Match> soccerMatch = new ArrayList<Match>();
        soccerMatch.add(new Match(new TeamBase("TeamOne"),new TeamBase("TeamTwo")));

        ArrayList<Tournament> soccerTurn = new ArrayList<Tournament>();
        soccerTurn.add(new Tournament("Tounrnament 1",3,soccerMatch));
        
        // Doesnt Work
        ArrayList<Tournament> footballTurn = createTournmanets(3);
        ArrayList<Tournament> iceHockeyTurn = createTournmanets(2);
        ArrayList<Tournament> baksetTurn = createTournmanets(4);

        // Adding to Sport list
        listSport.addElement(new Sport("Soccer",soccerTurn));
        listSport.addElement(new Sport("Football",createTournmanets(4)));
        listSport.addElement(new Sport("Ice Hockey",createTournmanets(4)));
        listSport.addElement(new Sport("Tennis",createTournmanets(4)));
        listSport.addElement(template());
        
        jlstSports.setModel(listSport);
  
    }
    
    private Sport template(){
        // Creates a Template just to see if it works and displays
        
        ArrayList<Match> tempMatch = new ArrayList<Match>();
        tempMatch.add(new Match(new TeamBase("TeamOne"),new TeamBase("TeamTwo")));
        
        ArrayList<Tournament> tempTurn = new ArrayList<Tournament>();
        tempTurn.add(new Tournament("Tounrnament",3,tempMatch));
        
        Sport s = new Sport("Sport",tempTurn);
        return s;
    }
         
    
    private ArrayList<Tournament> createTournmanets(int number){
        // Creates Templates as Torunmanets for Testing
        ArrayList<Tournament> tempTournaments = new ArrayList<>();
        for(int i = 0;i >= number;i++){
            tempTournaments.add(new Tournament("Tournament",3,createMatches(4)));
        }
        return tempTournaments;
    }
    private ArrayList<Match> createMatches(int number){
        // Creates Matches as Templates for Testing
        ArrayList<Match> tempMatch = new ArrayList<>();
        for(int i = 0;i >= number;i++){
            tempMatch.add(new Match(new TeamBase("Team"),new TeamBase("Team")));
        }
        return tempMatch;
    }


    private CustomListModelTournament updateTournamentList(ArrayList list){
        // updates the TournmaentList
        listTournaments = new CustomListModelTournament();
        for(var t : list){
            listTournaments.addElement((Tournament)t);
        }
        return listTournaments;
     
     
    }
     private CustomListModelMatches updateMatchList(ArrayList list){
         // updates the Matchlist
        listMatches = new CustomListModelMatches();
        for(var m : list){
            listMatches.addElement((Match)m);
        }
        return listMatches;
      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstSports = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlstTournaments = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlstGames = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnInformation = new javax.swing.JButton();

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlstSports.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlstSports.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlstSportsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlstSports);

        jlstTournaments.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlstTournaments.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlstTournamentsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jlstTournaments);

        jlstGames.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jlstGames);

        jLabel1.setText("Sport");

        jLabel2.setText("Tournaments");

        jLabel3.setText("Games");

        btnInformation.setText("Information");
        btnInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel1)
                        .addGap(213, 213, 213)
                        .addComponent(jLabel2)
                        .addGap(218, 218, 218)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(btnInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(btnInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlstSportsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlstSportsValueChanged
        // Checkes if the SElected values of Sports changes and if yes it will update the neccasary Tournmants jList 
        // and display them correctlz
        int selection = jlstSports.getSelectedIndex();
        CustomListModelSport currentListSport = ((CustomListModelSport)jlstSports.getModel());
        ArrayList listT = currentListSport.getFullElementAt(selection).getCurrentTournament();
        jlstGames.setModel(new CustomListModelMatches());
        jlstTournaments.setModel(updateTournamentList(listT));
        
    }//GEN-LAST:event_jlstSportsValueChanged

    private void btnInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInformationActionPerformed
        // Creates a J OptionPane to Display initial information about the Tounrmant if button is pressed
        CustomListModelTournament tournamnt = ((CustomListModelTournament)jlstTournaments.getModel());
        int selectionT = jlstTournaments.getSelectedIndex();
        if(selectionT > -1 && tournamnt.getSize() > 0) {
        JOptionPane.showMessageDialog(null,tournamnt.getFullElementAt(selectionT).getTournamentName());
         } else {
        JOptionPane.showMessageDialog(null,"Nothing FOund");
         }
    }//GEN-LAST:event_btnInformationActionPerformed

    private void jlstTournamentsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlstTournamentsValueChanged
        // Chckes if the selected value of tournamntslist changed and if yes it will update 
        // neccesary match jlist and display it correctly
        
        int selection = jlstTournaments.getSelectedIndex();
        CustomListModelTournament currentListTournaments = ((CustomListModelTournament)jlstTournaments.getModel());
        ArrayList listM = currentListTournaments.getFullElementAt(selection).getMatches();
        jlstGames.setModel(updateMatchList(listM));
    }//GEN-LAST:event_jlstTournamentsValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInformation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> jlstGames;
    private javax.swing.JList<String> jlstSports;
    private javax.swing.JList<String> jlstTournaments;
    // End of variables declaration//GEN-END:variables
}
